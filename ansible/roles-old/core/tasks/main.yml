#---
#
## /sys/fs/cgroup
#
## - name: Print facts
##  debug: var=ansible_facts
#
## docker run \
##  --volume=/:/rootfs:ro \
##  --volume=/var/run:/var/run:ro \
##  --volume=/sys:/sys:ro \
##  --volume=/var/lib/docker/:/var/lib/docker:ro \
##  --volume=/dev/disk/:/dev/disk:ro \
##  --publish=8080:8080 \
##  --detach=true \
##  --name=cadvisor \
##  google/cadvisor:latest
#
##- name: example copying file with owner and permissions
##  copy:
##    src: ../../
##    dest: /root/server-atomic/
##    directory_mode: true
##    force: true
#
#- name: Print debug info
#  debug:
#    msg:
#      ansible_distribution: "{{ ansible_distribution }}"
#      ansible_distribution_version: "{{ ansible_distribution_version }}"
#      ansible_product_uuid: "{{ ansible_product_uuid }}"
#      inventory_hostname: "{{ inventory_hostname }}"
#      ansible_default_ipv4: "{{ ansible_default_ipv4 }}"
#
## - name: Display all variables/facts known for a host
##   debug:
##     var: hostvars[inventory_hostname]
##   tags: debug_info
#
###
################
###
#
#- name: Upgrade the atomic host platform to the latest version (atomic host upgrade)
#  atomic_host:
#    revision: latest
#
#- name: Add epel repo to host
#  command: "rpm-ostree install epel-release"
#  register: result
#  ignore_errors: yes
#
#- name: Reboot after epel-release was added
#  reboot:
#  when: result is succeeded
#
#- name: Add centos-release-openshift-origin repo to host
#  command: "rpm-ostree install centos-release-openshift-origin"
#  register: result
#  ignore_errors: yes
#
#- name: Reboot after centos-openshift-origin was added
#  reboot:
#  when: result is succeeded
#
#- name: Install cockpit
#  command: "rpm-ostree install cockpit"
#  register: result
#  ignore_errors: yes
#
#- name: Reboot after cockpit install
#  reboot:
#  when: result is succeeded
#
#- name: Enable cockpit
#  command: "systemctl enable cockpit.socket"
#
#- name: Start cockpit
#  command: "systemctl start cockpit.socket"
#
#- name: Open cockpit port
#  firewalld: "port=9090/tcp zone=public permanent=true state=enabled immediate=yes"
#
#- name: Install mc
#  command: "rpm-ostree install mc"
#  register: result
#  ignore_errors: yes
#
#- name: Install mosh
#  command: "rpm-ostree install mosh"
#  register: result
#  ignore_errors: yes
#
#- name: Install kubernetes-master
#  command: "rpm-ostree install kubernetes-master"
#  register: result
#  ignore_errors: yes
#
#- name: Install kubernetes-node
#  command: "rpm-ostree install kubernetes-node"
#  register: result
#  ignore_errors: yes
#
#- name: Install kubernetes-client
#  command: "rpm-ostree install kubernetes-client"
#  register: result
#  ignore_errors: yes
#
#- name: Install kubernetes
#  command: "rpm-ostree install kubernetes"
#  register: result
#  ignore_errors: yes
#
#- name: Install flannel
#  command: "rpm-ostree install flannel"
#  register: result
#  ignore_errors: yes
#
#- name: Install etcd
#  command: "rpm-ostree install etcd"
#  register: result
#  ignore_errors: yes
#
##- name: Install kubeadm
##  command: "atomic install --system --name kubelet docker.io/jasonbrooks/kubeadm"
##  register: result
##  ignore_errors: yes
#
##- name: Install collectd
##  command: "rpm-ostree install collectd collectd-lvm rrdtool rrdtool-devel"
##  register: result
##  ignore_errors: yes
#
#
#
#- name: Reboot after cockpit install
#  reboot:
#  when: result is succeeded
#
###
################
###
#
##- name: Install cockpit
##  atomic_container:
##    name: cockpit
##    image: cockpit/ws
##    state: latest
##    backend: ostree
#
##- name: Reload unit files
##  command: systemctl daemon-reload
#
##- name: Enable and start cockpit
##  service:
##    name: cockpit
##    enabled: yes
##    state: restarted
